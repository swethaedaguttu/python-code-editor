{"ast":null,"code":"var _jsxFileName = \"C:\\\\code editor\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Editor from '@monaco-editor/react';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport 'xterm/css/xterm.css';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #1e1e1e;\n  color: white;\n`;\n_c = AppContainer;\nconst EditorContainer = styled.div`\n  flex: 1;\n  min-height: 50vh;\n  position: relative;\n`;\n_c2 = EditorContainer;\nconst TerminalContainer = styled.div`\n  height: 40vh;\n  background-color: #000;\n  padding: 10px;\n`;\n_c3 = TerminalContainer;\nconst Button = styled.button`\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin: 10px;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c4 = Button;\nconst defaultCode = `# Welcome to the Python Code Editor!\n# Write your Python code here and click \"Run Code\"\n\nprint(\"Hello, World!\")\n`;\nfunction App() {\n  _s();\n  const [code, setCode] = useState(defaultCode);\n  const terminalRef = useRef(null);\n  const wsRef = useRef(null);\n  const terminalInstanceRef = useRef(null);\n  const editorRef = useRef(null);\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n    // Force a layout update after mounting\n    setTimeout(() => {\n      editor.layout();\n    }, 0);\n  };\n  useEffect(() => {\n    // Initialize terminal\n    const terminal = new Terminal({\n      cursorBlink: true,\n      theme: {\n        background: '#000000'\n      }\n    });\n    const fitAddon = new FitAddon();\n    terminal.loadAddon(fitAddon);\n    terminal.open(terminalRef.current);\n    fitAddon.fit();\n    terminalInstanceRef.current = terminal;\n\n    // Initialize WebSocket connection\n    wsRef.current = new WebSocket('ws://localhost:8000/ws/terminal');\n    wsRef.current.onmessage = event => {\n      terminal.write(event.data);\n    };\n    wsRef.current.onerror = error => {\n      terminal.write('\\r\\n\\x1b[31mError: Could not connect to server\\x1b[0m\\r\\n');\n    };\n\n    // Handle terminal input\n    terminal.onData(data => {\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'input',\n          input: data\n        }));\n      }\n    });\n\n    // Handle window resize\n    const handleResize = () => {\n      if (editorRef.current) {\n        editorRef.current.layout();\n      }\n      fitAddon.fit();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      terminal.dispose();\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const handleRunCode = () => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      // Clear terminal before running new code\n      terminalInstanceRef.current.clear();\n      wsRef.current.send(JSON.stringify({\n        type: 'execute',\n        code: code\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(EditorContainer, {\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"50vh\",\n        defaultLanguage: \"python\",\n        defaultValue: defaultCode,\n        theme: \"vs-dark\",\n        onChange: value => setCode(value),\n        onMount: handleEditorDidMount,\n        options: {\n          minimap: {\n            enabled: false\n          },\n          fontSize: 14,\n          lineNumbers: 'on',\n          roundedSelection: false,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n          wordWrap: 'on'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleRunCode,\n      children: \"Run Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TerminalContainer, {\n      ref: terminalRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"niSS9GOSVdH5z+Be34ZAWEXfqjo=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"EditorContainer\");\n$RefreshReg$(_c3, \"TerminalContainer\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Editor","Terminal","FitAddon","styled","jsxDEV","_jsxDEV","AppContainer","div","_c","EditorContainer","_c2","TerminalContainer","_c3","Button","button","_c4","defaultCode","App","_s","code","setCode","terminalRef","wsRef","terminalInstanceRef","editorRef","handleEditorDidMount","editor","monaco","current","setTimeout","layout","terminal","cursorBlink","theme","background","fitAddon","loadAddon","open","fit","WebSocket","onmessage","event","write","data","onerror","error","onData","readyState","OPEN","send","JSON","stringify","type","input","handleResize","window","addEventListener","dispose","close","removeEventListener","handleRunCode","clear","children","height","defaultLanguage","defaultValue","onChange","value","onMount","options","minimap","enabled","fontSize","lineNumbers","roundedSelection","scrollBeyondLastLine","automaticLayout","wordWrap","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","_c5","$RefreshReg$"],"sources":["C:/code editor/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Editor from '@monaco-editor/react';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport 'xterm/css/xterm.css';\nimport styled from 'styled-components';\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  background-color: #1e1e1e;\n  color: white;\n`;\n\nconst EditorContainer = styled.div`\n  flex: 1;\n  min-height: 50vh;\n  position: relative;\n`;\n\nconst TerminalContainer = styled.div`\n  height: 40vh;\n  background-color: #000;\n  padding: 10px;\n`;\n\nconst Button = styled.button`\n  background-color: #4CAF50;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin: 10px;\n  font-size: 16px;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n\nconst defaultCode = `# Welcome to the Python Code Editor!\n# Write your Python code here and click \"Run Code\"\n\nprint(\"Hello, World!\")\n`;\n\nfunction App() {\n  const [code, setCode] = useState(defaultCode);\n  const terminalRef = useRef(null);\n  const wsRef = useRef(null);\n  const terminalInstanceRef = useRef(null);\n  const editorRef = useRef(null);\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n    // Force a layout update after mounting\n    setTimeout(() => {\n      editor.layout();\n    }, 0);\n  };\n\n  useEffect(() => {\n    // Initialize terminal\n    const terminal = new Terminal({\n      cursorBlink: true,\n      theme: {\n        background: '#000000'\n      }\n    });\n    const fitAddon = new FitAddon();\n    terminal.loadAddon(fitAddon);\n    terminal.open(terminalRef.current);\n    fitAddon.fit();\n    terminalInstanceRef.current = terminal;\n\n    // Initialize WebSocket connection\n    wsRef.current = new WebSocket('ws://localhost:8000/ws/terminal');\n    \n    wsRef.current.onmessage = (event) => {\n      terminal.write(event.data);\n    };\n\n    wsRef.current.onerror = (error) => {\n      terminal.write('\\r\\n\\x1b[31mError: Could not connect to server\\x1b[0m\\r\\n');\n    };\n\n    // Handle terminal input\n    terminal.onData((data) => {\n      if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n        wsRef.current.send(JSON.stringify({\n          type: 'input',\n          input: data\n        }));\n      }\n    });\n\n    // Handle window resize\n    const handleResize = () => {\n      if (editorRef.current) {\n        editorRef.current.layout();\n      }\n      fitAddon.fit();\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      terminal.dispose();\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleRunCode = () => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      // Clear terminal before running new code\n      terminalInstanceRef.current.clear();\n      wsRef.current.send(JSON.stringify({\n        type: 'execute',\n        code: code\n      }));\n    }\n  };\n\n  return (\n    <AppContainer>\n      <EditorContainer>\n        <Editor\n          height=\"50vh\"\n          defaultLanguage=\"python\"\n          defaultValue={defaultCode}\n          theme=\"vs-dark\"\n          onChange={(value) => setCode(value)}\n          onMount={handleEditorDidMount}\n          options={{\n            minimap: { enabled: false },\n            fontSize: 14,\n            lineNumbers: 'on',\n            roundedSelection: false,\n            scrollBeyondLastLine: false,\n            automaticLayout: true,\n            wordWrap: 'on',\n          }}\n        />\n      </EditorContainer>\n      <Button onClick={handleRunCode}>Run Code</Button>\n      <TerminalContainer ref={terminalRef} />\n    </AppContainer>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}